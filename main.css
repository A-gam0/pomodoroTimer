
/* rules  */
:root {
/*  --bg-clr: antiquewhite;
  --border-clr: brown;
  --box-shadow-clr: brown;
  --cell-bg-clr: bisque;
  --cell-clr: coral;
  --highlighted-cell-bg-clr: coral;*/

  --orange: coral;
  --light-orange: #FFE4C4; 
  --brown: brown;
  --rose: #FAEBD7;

  --menu-top: 97%;
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

html {

    font-size: 16px;
}

@media(min-width:550px) {
    html {
        font-size: 17px;
    }
}

@media(min-width:900px) {
    html {
        font-size: 18px;
    }
}

body {
    margin: 0;
    padding: 0;
}

h1 {
	text-align: center;
    text-transform: uppercase;
    font-size: 2rem;
    margin: .5em auto;   
}

h2 {
	text-align: center;
    text-transform: uppercase;
    margin: 0.5em auto;
    font-size: 1.4rem;
}

h3 {
	text-align: center;
    margin: 0.6em auto;
    font-size: 1.2rem;
    font-weight: 500;
}

input {
    font-size: inherit;
    font-family: inherit;

}

img {
    display: block;
    margin: 0 auto;
    max-width: 100%;
}

a {
    cursor: pointer;
    text-decoration: none;
    color: inherit;
}

button {
    cursor: pointer;
    border: none;
    background-color: inherit;
    font-size: inherit;
    font-family: inherit;
    padding: 0;
}

p {
    line-height: 1.4;
    font-size: 1.1rem;
}

/*start styling*/

body {
	font-family: "Rubik", sans-serif;
	background: var(--rose);
	/* for the pull up menu	*/
/*	position: relative;*/
	padding: 1em 1em 3em 1em;
/*	overflow: hidden;*/
}

section.landing {
/*	min-height: 390px;*/
/*	height: 87vh;*/
/*	display: grid;*/
/*	grid-template-rows: auto minmax(400px, 600px);*/
/*	gap: 1em;*/
}

/*section.landing > * {
	border-bottom: 1em;
}*/
.styles {}

.styles .h-line {
	position: relative;
	margin: 1em 0;
	height: 10px;
	background: var(--light-orange);
}

.styles .h-line .current-style {
	font-weight: bold;
	text-transform: uppercase;
	letter-spacing: 1.2px;
	font-size: 1.2rem;
	color: var(--orange);
	background: var(--light-orange);
	padding: .5em 1.3em;
	border-radius: 999px;

	position: absolute;
	left: 0;
	top: 50%;
	transform: translateY(-50%);
}

.styles .h-line .next-style {
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    padding: 0.5em;
    color: var(--orange);
    border-radius: 50%;
}

.styles .h-line .next-style span {
	font-weight: bold;
	/*  arrows are always off the center!!  */
    transform: translateX(2px);
}

/*the only solution for centering the container 
without causing additional problems using aspect-ratio*/
.screens-wrapper {}

.screens-container {
	margin: 3em auto 3em auto;
	max-height: 410px;
	aspect-ratio: 7 / 9;
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    grid-template-rows: repeat(9, 1fr);
    gap: 0.5em;
}

.screen {
	border-radius: 5px;
	background: var(--light-orange);
	box-shadow: 0 4px var(--brown);
	border: 1px solid var(--brown);
}

.landing .text p {
    font-size: 1.4rem;
    color: var(--brown);
    text-align: center;
    font-weight: 500;
/*    margin-bottom: calc(100% - var(--menu-top));*/
}

.pull-up-menu {
	/*	the top values are not calculated */
    background: var(--orange);
    height: 75vh;
    min-height: 500px;
    position: fixed;
    left: 1em;
    right: 1em;
    top: var(--menu-top);
	padding: 1em;
    border-radius: 20px 20px 0 0;
    transition: 0.7s ease-in-out;
}

.pull-up-menu .arrow {
    background: var(--orange);
    color: var(--brown);
    border-radius: 50%;
    position: absolute;
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%) rotate(180deg);
    transition: 0.5s ease-in-out;
}

.pull-up-menu .arrow span {
    padding: 0.3em; 
    font-size: 2rem; 
    font-weight: bold; 
}

.menu-items {
	height: 100%;
	overflow: auto;
}

/*components*/

.move-menu {
	top: 25%;
}

.move-button {
	transform: translate(-50%, -50%) rotate(0deg) !important;
}

.flip {
	transform: rotateY(180deg);
	transition: .5s ease-in-out;
}

.color {
	background: var(--orange);
}

.landing-header {
	color: var(--orange);
    margin: 1em 0 0.5em 0;
}

/*used everytime I need to center a 
text or an icon using flexbox
.center-text-icon {
	display: flex;
	justify-content: center;
	align-items: center;
}

.screen-highlighted {
	background: var(--orange);
}